
package fr.ul.miage.exemple.generated;
import java.util.GregorianCalendar;
import java.util.ArrayList;

action code {:
	void afficherResultat(){
		System.out.println("Nombre d'utilisateur : ");
	}
:}

/* la grammaire */
terminal COM, FONCTION, PRINC, PF, PO, AO, AF, PV, V, EG, GLOB, LOC, ENTIER, NOM, NUM, PLUS, MOINS, DIV, MUL, OP, RET;
terminal APPEL;
non terminal prog, block, fonctionP, blockFonction, affectation, declaration, valeur, retourner; 
non terminal operation, operateur, fonction, parametre, declarationI, appel, parametreA, parametreD;


start with prog;

prog 	::= block 
	 	;
	 	
declaration ::= GLOB ENTIER parametreD EG operation PV
		| GLOB ENTIER parametreD EG valeur PV
		| GLOB ENTIER parametreD PV
		;
		
block	::= COM block
		| declaration block
		| fonction block
		| fonctionP
		;

valeur ::= NUM
		| NOM
		;

operateur	::= PLUS
			| MOINS	
			| MUL
			| DIV	
			;

operation ::= OP operateur operation
			| OP
			| NOM operateur operation
			| appel operateur operation
			| appel 
			| NUM operateur operation
			| PO operation PF operateur operation
			| PO operation PF
			;

affectation ::= NOM EG operation PV
			| NOM EG valeur PV
				;

declarationI ::= LOC ENTIER parametreD EG operation PV
				| LOC ENTIER parametreD EG valeur PV
				| LOC ENTIER parametreD PV
				;

blockFonction ::= declarationI blockFonction
				| COM blockFonction
				| affectation blockFonction
				|
				;
				
fonctionP ::= FONCTION PRINC PO PF AO blockFonction AF;

fonction ::= FONCTION ENTIER NOM PO parametre PF AO blockFonction retourner AF
			| FONCTION NOM PO parametre PF AO blockFonction AF
			;
			
parametre ::=  operation V parametre
			| operation
			| ENTIER NOM
			| ENTIER NOM V parametre
			| NOM V parametre
			| NOM
			|
			;
			
parametreA ::= operation V parametreA
			| operation
			| NOM V parametreA
			| NOM
			;
			
parametreD ::= NOM V parametreD
			| NOM
			;

retourner ::= RET operation PV
			| RET NOM PV
			| RET NUM PV
			;			

appel ::= APPEL NOM PO parametreA PF
		| APPEL NOM PO PF
		;
		